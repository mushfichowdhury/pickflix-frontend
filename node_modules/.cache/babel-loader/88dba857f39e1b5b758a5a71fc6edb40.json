{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mushfichowdhury/Flatiron/code/Projects/Mod4-PickFlix/pickflix-frontend/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport NavBar from './NavBar';\nimport PickPage from './Pick Page/PickPage';\nimport Welcome from './Welcome Page/Welcome';\nimport Profile from './Profile Page/Profile';\nimport { Route, withRouter } from 'react-router-dom';\nimport LogIn from './Welcome Page/LogIn';\nimport Signup from './Welcome Page/Signup';\nimport ls from \"local-storage\";\nimport Home from './Home Page/Home'; // THIS IS MUSHFI'S WORKING VERSION\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: \"\",\n      allUsers: [],\n      isLoggedIn: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        currentUser: ls.get(\"currentUser\") || \"\"\n      });\n      fetch(\"https://pick-flix.herokuapp.com/users\").then(resp => resp.json()).then(users => {\n        this.setState({\n          allUsers: users\n        });\n      });\n      this.props.history.push(\"/welcome\");\n      fetch(\"https://pick-flix.herokuapp.com/movies\").then(resp => resp.json()).then(moviesArray => {\n        this.setState({\n          movies: moviesArray\n        });\n      });\n    };\n\n    this.signupSubmitHandler = newUser => {\n      console.log(\"new user in app.js\", newUser);\n      fetch(\"https://pick-flix.herokuapp.com/users\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n          \"accept\": \"application/json\"\n        },\n        body: JSON.stringify(newUser)\n      }).then(r => r.json()).then(user => {\n        this.setState({\n          currentUser: user\n        });\n        ls.set(\"currentUser\", user);\n      });\n    };\n\n    this.loginSubmitHandler = userInfo => {\n      let foundUser = this.state.allUsers.find(user => userInfo.username === user.username);\n      console.log(this.state.allUsers);\n\n      if (foundUser) {\n        console.log(\"found\");\n        this.setState({\n          currentUser: foundUser,\n          isLoggedIn: true\n        });\n        ls.set(\"currentUser\", foundUser);\n        this.props.history.push(\"/home\");\n      }\n    };\n\n    this.logoutHandler = () => {\n      this.setState({\n        currentUser: {}\n      });\n      ls.remove(\"currentUser\");\n    };\n  }\n\n  render() {\n    console.log(\"Logged in as:\", ls.get(\"currentUser\"));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: ls.get(\"currentUser\") === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/welcome\",\n            component: Welcome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: (routerProps, props) => {\n              return /*#__PURE__*/_jsxDEV(LogIn, { ...props,\n                submitHandler: this.loginSubmitHandler,\n                routerProps: routerProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props,\n              submitHandler: this.signupSubmitHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"root\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            logoutHandler: this.logOutHandler,\n            currentUser: ls.get(\"currentUser\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/pickpage\",\n            render: props => /*#__PURE__*/_jsxDEV(PickPage, { ...props,\n              currentUser: ls.get(\"currentUser\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props,\n              currentUser: ls.get(\"currentUser\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/welcome\",\n            component: Welcome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            render: props => /*#__PURE__*/_jsxDEV(Profile, { ...props,\n              currentUser: ls.get(\"currentUser\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            render: (routerProps, props) => {\n              return /*#__PURE__*/_jsxDEV(LogIn, { ...props,\n                submitHandler: this.loginSubmitHandler,\n                routerProps: routerProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/mushfichowdhury/Flatiron/code/Projects/Mod4-PickFlix/pickflix-frontend/src/App.js"],"names":["React","NavBar","PickPage","Welcome","Profile","Route","withRouter","LogIn","Signup","ls","Home","App","Component","state","currentUser","allUsers","isLoggedIn","componentDidMount","setState","get","fetch","then","resp","json","users","props","history","push","moviesArray","movies","signupSubmitHandler","newUser","console","log","method","headers","body","JSON","stringify","r","user","set","loginSubmitHandler","userInfo","foundUser","find","username","logoutHandler","remove","render","routerProps","logOutHandler"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport NavBar from './NavBar'\nimport PickPage from './Pick Page/PickPage';\nimport Welcome from './Welcome Page/Welcome';\nimport Profile from './Profile Page/Profile';\nimport {Route, withRouter} from 'react-router-dom'\nimport LogIn from './Welcome Page/LogIn';\nimport Signup from './Welcome Page/Signup';\nimport ls from \"local-storage\"\nimport Home from './Home Page/Home';\n\n// THIS IS MUSHFI'S WORKING VERSION\n\nclass App extends React.Component {\n  state = {\n    currentUser: \"\",\n    allUsers: [],\n    isLoggedIn: false,\n  }\n\n  componentDidMount = () => {\n    this.setState({ currentUser: ls.get(\"currentUser\") || \"\" })\n    fetch(\"https://pick-flix.herokuapp.com/users\")\n      .then(resp => resp.json())\n      .then(users => {\n        this.setState({ allUsers: users })\n      })\n    this.props.history.push(\"/welcome\")\n    \n    fetch(\"https://pick-flix.herokuapp.com/movies\")\n            .then(resp => resp.json())\n            .then((moviesArray) => {\n                this.setState({\n                    movies: moviesArray\n                })\n            })\n  }\n  \n  signupSubmitHandler = (newUser) => {\n    console.log(\"new user in app.js\", newUser)\n    fetch(\"https://pick-flix.herokuapp.com/users\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"accept\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    })\n      .then(r => r.json())\n      .then(user => {\n        this.setState({ currentUser: user,})\n        ls.set(\"currentUser\", user)\n      })\n  }\n\n  loginSubmitHandler = (userInfo) => {\n    let foundUser = this.state.allUsers.find(user => userInfo.username === user.username)\n    console.log(this.state.allUsers)\n    if (foundUser) {\n      console.log(\"found\")\n      this.setState({ currentUser: foundUser, isLoggedIn: true })\n      ls.set(\"currentUser\", foundUser)\n      this.props.history.push(\"/home\")\n    }\n }\n\n logoutHandler = () => {\n   this.setState({currentUser: {}})\n   ls.remove(\"currentUser\")\n }\n\n  render() {\n    console.log(\"Logged in as:\", ls.get(\"currentUser\"))\n    return (\n      \n      <> \n        {ls.get(\"currentUser\") === null ? \n          <div className=\"root\" >\n            <div >\n              {/* <Route\n                path=\"/pickpage\"\n                render={(props) => (\n                  <PickPage {...props} currentUser={ls.get(\"currentUser\")} />\n                )}\n              /> */}\n              <Route path=\"/welcome\" component={Welcome} />\n              {/* <Route path=\"/profile\"\n                render={(props) => (\n                  <Profile {...props} currentUser={ls.get(\"currentUser\")} />\n                )} /> */}\n              <Route path=\"/login\"\n                render={(routerProps, props) => {\n                  return (\n                    <LogIn {...props}\n                      submitHandler={this.loginSubmitHandler}\n                      routerProps={routerProps} />\n                  )\n                }\n\n                }\n              />\n              <Route\n                path=\"/signup\"\n                render={(props) => (\n                  <Signup {...props} submitHandler={this.signupSubmitHandler} />\n                )}\n              />\n            </div>\n          </div>\n\n        :\n        <div className=\"root\" >\n            <div >\n              <NavBar\n                logoutHandler={this.logOutHandler}\n                currentUser={ls.get(\"currentUser\")}\n              />\n              <Route\n                path=\"/pickpage\"\n                render={(props) => (\n                  <PickPage {...props} currentUser={ls.get(\"currentUser\")} />\n                )}\n              />\n              <Route\n                path=\"/home\"\n                render={(props) => (\n                  <Home {...props} currentUser={ls.get(\"currentUser\")} />\n                )}\n              />\n              <Route path=\"/welcome\" component={Welcome} />\n              <Route path=\"/profile\"\n                render={(props) => (\n                  <Profile {...props} currentUser={ls.get(\"currentUser\")} />\n                )} />\n              <Route path=\"/login\"\n                render={(routerProps, props) => {\n                  return (\n                    <LogIn {...props}\n                      submitHandler={this.loginSubmitHandler}\n                      routerProps={routerProps} />\n                  )\n                }\n\n                }\n              />\n              {/* <Route\n                path=\"/signup\"\n                render={(props) => (\n                  <Signup {...props} submitHandler={this.signupSubmitHandler} />\n                )}\n              /> */}\n            </div>\n          </div>\n    }\n      </>     \n      \n    );\n    }\n  }\n\nexport default withRouter(App)\n"]},"metadata":{},"sourceType":"module"}